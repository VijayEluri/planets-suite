<?xml version="1.0"?>

<!-- ======================================================================= -->
<!-- deployer build                                                          -->
<!-- ======================================================================= -->

<project name="Planets Service Build Commons" default="deploy:ear" basedir=".">
  
  <property file="${pserv.root.dir}/build.properties"/>

  <property environment="env"/>

  <property name="build.dir" value="${appDir}/build"/>
  <property name="build.classes.dir" value="${build.dir}/classes"/>
  <property name="war.build.dir" value="${appDir}/build/war"/>
  <property name="ear.build.dir" value="${appDir}/build/ear"/>

  <property name="war.base.name" value="pserv-${appName}.war"/>
  <property name="ear.base.name" value="pserv-${appName}.ear"/>
  <property name="ejb.jar.name" value="pserv-${appName}.jar"/>

  <property name="test.dir" value="${appDir}/../test/java"/>
  <property name="client.config" value="${appDir}/../test/client-config"/>

  <!--To configure from the build.properties file-->
  <property name="jboss.home" value="${if_server.dir}"/>
  <property name="junit.lib" value="${junitlib.dir}"/>

  <!-- Build classpath -->
  <path id="classpath">
    <fileset dir="${jboss.home}/server/default/lib">
      <include name="*.jar"/>
    </fileset>
<!--
    <fileset dir="${jboss.home}/server/default/deploy/ejb3.deployer">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="${jboss.home}/server/default/deploy/jboss-aop-jdk50.deployer">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="${jboss.home}/server/default/deploy/">
      <include name="jboss*web*/jsf-libs/*.jar"/>
    </fileset>
-->
    <fileset dir="${jboss.home}/server/default/deploy/jboss-web.deployer">
      <include name="**/*.jar"/>
    </fileset>
    <fileset dir="${jboss.home}/lib">
      <include name="*.jar"/>
    </fileset>
    <fileset dir="${jboss.home}/client">
      <include name="*.jar"/>
    </fileset>
    <!-- specific libs -->
    <fileset dir="${lib.dir}">
      <include name="**/*.jar"/>
      <exclude name="lib-jee/*.jar"/>
    </fileset>
    <!--include JUNIT 4.0 lib-->
    <!--fileset dir="${junit.lib}">
            <include name="*.jar"/>
        </fileset-->
    <!--include our external resources as *.xml and *.props-->
    <pathelement location="${src.resources}"/>
    <pathelement location="${build.classes.dir}"/>
    <!-- So that we can get jndi.properties for InitialContext -->
    <pathelement location="${client.config}"/>
  </path>

  <property name="build.classpath" refid="classpath"/>

  <!-- The JAX-WS classpath -->
  <path id="jaxwsclasspath">
    <fileset dir="${jboss.home}/client">
      <include name="*.jar" />
    </fileset>
  </path>

  <property name="jaxws.classpath" refid="jaxwsclasspath"/>
  
  <!-- Do nothing -->
  <target name="build:off">
    <echo message="Build is switched off by default."/>
  </target>

  <!-- =================================================================== -->
  <!-- Prepares the build directory                                        -->
  <!-- =================================================================== -->
  <target name="prepare">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${war.build.dir}"/>
    <mkdir dir="${ear.build.dir}"/>
    <mkdir dir="${build.classes.dir}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the source code                                            -->
  <!-- =================================================================== -->
  <target name="compile" depends="prepare">
    <echo message="ant.java.version: ${ant.java.version}" />
    <!--compile the model-->
    <javac source="1.5" 
		 srcdir="${src.dir}"
           destdir="${build.classes.dir}"
           debug="on"
           deprecation="on"
           optimize="off"
           includes="**">
      <classpath refid="classpath"/>
    </javac>
    <!-- tempory not compiling test cases - include after restructuring build.xml-->
    <!--compile the test-classes, session beans, etc.-->
    <!--javac source="1.5" 
			srcdir="${test.dir}"
           destdir="${build.classes.dir}"
           debug="on"
           deprecation="on"
           optimize="off"
           includes="**">
            <classpath refid="classpath"/>
    </javac-->
    
    <!-- Also copy the libs into the right place -->
    <copy toDir="${build.classes.dir}" flatten="true">
      <fileset dir="${lib.dir}">
        <include name="**/*.jar"/>
        <exclude name="lib-jee/*.jar"/>
      </fileset>
    </copy>
    
    <!-- Also copy the resources into the right place -->
    <copy toDir="${build.classes.dir}" flatten="false" overwrite="true" failonerror="false">
      <fileset dir="${src.resources}">
        <include name="**/*.properties" />
        <include name="**/*.xml" />
        <include name="import.sql"/>
        <include name="seam.properties"/>
        <include name="META-INF/persistence.xml"/>
        <include name="META-INF/ejb-jar.xml"/>
        <include name="META-INF/orm.xml"/>
        <include name="META-INF/components.xml"/>
        <include name="META-INF/jboss.xml"/>
        <include name="META-INF/security-config.xml"/>
        <include name="META-INF/security-rules.drl"/>
      </fileset>
    </copy>
    
  </target>

  <!-- =================================================================== -->
  
  <target name="compile:ejb" depends="undeploy,compile">
    <jar jarfile="${build.dir}/${ejb.jar.name}">
      <fileset dir="${build.classes.dir}"/>
    </jar>
  </target>

  <!-- =================================================================== -->

  <target name="deploy:ejb" depends="compile:ejb">
    <copy file="${build.dir}/${ejb.jar.name}" todir="${jboss.home}/server/default/deploy"/>
  </target>

  <!-- =================================================================== -->

  <target name="deploy:jar" depends="compile:ejb">
    <copy file="${build.dir}/${ejb.jar.name}" todir="${jboss.home}/server/lib"/>
  </target>

  <!-- =================================================================== -->

  <target name="run.junittests" description="executes the included JUnit tests">
    <junit fork="yes" haltonfailure="yes">
      <!--test name="eu.planets_project.tb.unittest.model.BasicPropertiesTest" /-->
      <!--test name="eu.planets_project.tb.unittest.model.benchmark.BenchmarkGoalHandlerTest" /-->
      <!--test name="eu.planets_project.tb.unittest.model.benchmark.BenchmarkGoalTest" /-->
      <!--test name="eu.planets_project.tb.unittest.model.mockup.ExperimentWorkflowTest" /-->
      <!--test name="eu.planets_project.tb.unittest.model.mockup.WorkflowHandlerTest" /-->
      <!--test name="eu.planets_project.tb.unittest.model.mockup.WorkflowTest" /-->
      <!--test name="eu.planets_project.tb.unittest.TestbedManagerTest" /-->
      <!--test name="eu.planets_project.tb.unittest.AdminManagerTest" /-->
      <!--test name="eu.planets_project.tb.unittest.model.ExperimentTest" /-->
      <!--test name="eu.planets_project.tb.unittest.model.ExperimentSetupTest" /-->
      <!--test name="eu.planets_project.tb.unittest.model.ExperimentExecutionTest" /-->
      <!--test name="eu.planets_project.tb.unittest.model.ExperimentEvaluationTest" /-->
      <test name="eu.planets_project.tb.unittest.system.mockup.WorkflowInvokerTest" />
      <!--test name="eu.planets_project.tb.unittest.model.CommentBrowserTest" /-->
      <formatter type="plain" usefile="false" />
      <classpath refid="classpath" />
    </junit>
  </target>

  <!-- =================================================================== -->
  <!-- Cleans up generated stuff on JBoss                                          -->
  <!-- =================================================================== -->

  <target name="clean" depends="undeploy" description="cleans the build dir and finally undeploys the testbed application">
    <delete dir="${build.dir}"/>
  </target>

  <target name="undeploy" description="undeploy the testbed application from the JBoss application server">
    <delete file="${jboss.home}/server/default/deploy/${war.base.name}"/>
    <delete file="${jboss.home}/server/default/deploy/${ear.base.name}"/>
    <delete file="${jboss.home}/server/default/deploy/${ejb.jar.name}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Helper targets to start the JBoss in a new cmd window (on Windows)                                         -->
  <!-- =================================================================== -->
  <target name="startjboss" description="launches the Jboss application server">
    <exec dir="${jboss.home}/bin" executable="cmd.exe" spawn="true">
      <arg value="/c start run.bat"/>
    </exec>
  </target>

  <!-- =================================================================== -->

  <target name="dist:war">
    <mkdir dir="${war.build.dir}/${appName}" />
    <mkdir dir="${war.build.dir}/${appName}/WEB-INF/lib" />
    <mkdir dir="${war.build.dir}/${appName}/WEB-INF/classes" />
    
    <javac source="1.5" debug="true" srcdir="${src.dir}" destdir="${war.build.dir}/${appName}/WEB-INF/classes">
      <classpath refid="classpath"/>
    </javac>
    
    <copy todir="${ear.build.dir}/${appName}">
        <fileset dir="${src.web}" casesensitive="yes">
        <include name="**/*.*" />
      </fileset>
    </copy>

    <copy todir="${ear.build.dir}/${appName}/WEB-INF/classes">
      <fileset dir="${src.resources}">
        <include name="**/*.properties" />
        <include name="**/*.xml" />
      </fileset>
    </copy>
    
    <copy file="${build.dir}/${ejb.jar.name}" tofile="${war.build.dir}/${appName}/WEB-INF/lib"/>
    
    <jar jarfile="${build.dir}/${war.base.name}" 
     basedir="${war.build.dir}/${appName}"/>
  </target>

  <!-- =================================================================== -->

  <target name="dist:ear">
    <mkdir dir="${ear.build.dir}/${appName}" />
    <mkdir dir="${ear.build.dir}/${appName}/WEB-INF/lib" />
    <mkdir dir="${ear.build.dir}/${appName}/WEB-INF/classes" />

    <copy todir="${ear.build.dir}/${appName}">
        <fileset dir="${src.web}" casesensitive="yes">
        <include name="**/*.*" />
      </fileset>
    </copy>

    <copy todir="${ear.build.dir}/${appName}/WEB-INF/classes">
      <fileset dir="${src.resources}">
        <include name="**/*.properties" />
        <include name="**/*.xml" />
      </fileset>
    </copy>
    
    <copy file="${build.dir}/${ejb.jar.name}" todir="${ear.build.dir}" />

    <jar jarfile="${ear.build.dir}/${war.base.name}" 
     basedir="${ear.build.dir}/${appName}"/>

    <ear destfile="${build.dir}/${ear.base.name}" 
          appxml="${src.resources}/META-INF/application.xml">
      <fileset dir="${ear.build.dir}" includes="*.jar,*.war"/>
      <fileset dir="${src.resources}">
        <!-- include name="META-INF/application.xml"/ -->
        <include name="META-INF/jboss-app.xml"/>
        <include name="META-INF/*-service.xml"/>
        <include name="META-INF/*-xmbean.xml"/>
        <include name="treecache.xml"/>
        <include name="*.jpdl.xml"/>
        <exclude name=".gpd.*"/>
        <include name="*.cfg.xml"/>
        <include name="*.xsd"/>
        <include name="*.drl"/>
      </fileset>
    </ear>

  </target>

  <!-- =================================================================== -->

  <target name="build:war" depends="compile:ejb, dist:war" description="builds the web application"/>

  <target name="build:ear" depends="compile:ejb, dist:ear" description="builds the application"/>

  <!-- =================================================================== -->

  <target name="deploy:war" depends="undeploy, build:war">
	  <copy file="${war.base.name}" todir="${jboss.home}/server/default/deploy" overwrite="true"/>
  </target>

  <target name="deploy:ear" depends="undeploy, build:ear" 
        description="DEFAULT builds and deploy the ear">
	<copy file="${build.dir}/${ear.base.name}" todir="${jboss.home}/server/default/deploy" overwrite="true"/>
  </target>

</project>
