<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:t="http://myfaces.apache.org/tomahawk"
	xmlns:c="http://java.sun.com/jstl/core">
<body>
<f:view>
<ui:composition template="/WEB-INF/templates/main_template.xhtml">
  <ui:define name="title">
    Testbed : Register Services
  </ui:define>

<ui:define name="header">
	<ui:include src="/WEB-INF/templates/header.xhtml">
		<ui:param name="page" value="register_TBservices"/>
	</ui:include>
	
	<script type="text/javascript" src="${facesContext.externalContext.requestContextPath}/js/overlib/overlib.js"></script> 
	<!-- css popup javascript -->
	<script type="text/javascript"
		src="${facesContext.externalContext.requestContextPath}/js/csspopup/csspopup.js">
	</script>	
</ui:define>

<ui:define name="content">

	<div id="mainwrapper">
	<div id="maincol">
	<div class="innertubemain">
     
<!-- Step1: Enter WSDL URI and select service name + operation -->
     <h:form id="formanalyzeWSDL" rendered="#{RegisterTBServiceBean.renderedStage == 1}">
		 <h:message id="InfoErrorMessages" for="link_byHand" errorClass="errorMessage" infoClass="infoMessage" />
                        <p>This is the <b>Registration Wizard</b> for deploying executable services within the Testbed.  Every service used within the Testbed must follow this five-step registration process.  Once the process is complete the service will be available for experimenters to select during the creation of new experiments.</p>
                        <p>For <b>Stage 1</b> you will need to find the required service endpoint on the server, either by entering a known URL by hand or by browsing the list of service endpoints that are currently registered with JBoss. 
                    You can view a list of <a href="http://localhost:8080/jbossws/services">services registered with JBoss here</a>.</p>
                    <p>Once you have entered a service endpoint you will then be able to select the appropriate <b>Service Name</b> and <b>Selected Operation Name</b>.</p>
		 <fieldset>
		 	<legend>#{res['reg_serv.legendAnalyze']}</legend>
		 	<p>Please enter any locally available Service WSDL URL
		 		<h:commandLink id="link_byHand" immediate="true" value=" by hand " action="#{Manager_Backing.initRegisterTBService}"/>
		 		or
		 		<h:commandLink id="link_browseJBossWS" immediate="true" value=" browse the underlying JBoss server instance." action="#{RegisterTBServiceBean.command_selectFromJBossWS}"/>
		 	</p>
		 	<!-- 1. enter WSDL by hand OR -->
		 	<h:panelGroup rendered="#{RegisterTBServiceBean.selectFromJBossWS==false}">
         		<p><h:outputText value="Enter Service WSDL URL:" styleClass="readerLabel"/>
		 		<!-- note: RegisterTBServiceBean is put into session by Manager.initExperimentAction() -->
		 		<h:inputText value="#{RegisterTBServiceBean.endpointURI}" id="ServiceURI" required="true" size="80" disabled="#{RegisterTBServiceBean.stage1Completed}">
         		</h:inputText> <img src="${facesContext.externalContext.requestContextPath}/graphics/help.gif" alt="" title="" onmouseover="return overlib('&lt;p style=\'width:350px;text-align:left;\'&gt;#{res['reg_serv.byHandTip']}&lt;/p&gt;', OFFSETX, 20, OFFSETY, -20, WIDTH, 350);" onmouseout="return nd();" />
         		</p>
         		<br/>
         		<p><h:commandButton value="Analyze" action="#{RegisterTBServiceBean.command_analyzeWSDL}" disabled="#{RegisterTBServiceBean.stage1Completed}"/></p>
				<p><h:outputText id="outWSDLCompliant" value="Checking WSDL for WS-I compliance: #{ServiceTemplateDeployer.endpointWSICompliant}" rendered="#{ServiceTemplateDeployer.endpointWSICompliant}"/></p>
         	</h:panelGroup>
         	<!-- 2. enter select from JBossWS/Services -->
         	<h:panelGroup rendered="#{RegisterTBServiceBean.selectFromJBossWS}">
				<p> <h:outputText value="On JBoss deployed service endpoints:" styleClass="readerLabel"/>
             		<h:selectOneMenu id="selectOneJBossEndpoint" value="#{RegisterTBServiceBean.selectedJBossEndpoint.value}" immediate="true" 
            			 valueChangeListener="#{RegisterTBServiceBean.processJBossEndpointChange}" onchange="submit()" disabled="#{RegisterTBServiceBean.stage1Completed}">
                 		<f:selectItems value="#{RegisterTBServiceBean.allJBossEndpoints}" />                        
            	</h:selectOneMenu> <img src="${facesContext.externalContext.requestContextPath}/graphics/help.gif" alt="" title="" onmouseover="return overlib('&lt;p style=\'width:350px;text-align:left;\'&gt;#{res['reg_serv.browseTip']}&lt;/p&gt;', OFFSETX, 20, OFFSETY, -20, WIDTH, 350);" onmouseout="return nd();" />
            	</p>
         	</h:panelGroup>
    	</fieldset>
     
        <h:panelGroup rendered="#{RegisterTBServiceBean.isEndpointSelected==false and RegisterTBServiceBean.renderedStage == 1}">
        <p>&#160;</p>
		<p>&#160;</p>
		<p>&#160;</p>
		<p>&#160;</p>
		<p>&#160;</p>
		<p>&#160;</p>
		<p>&#160;</p>
		</h:panelGroup>
     </h:form>
     
     <h:form id="FormServiceSelection" rendered="#{RegisterTBServiceBean.isEndpointSelected==true and RegisterTBServiceBean.renderedStage == 1}">
    	<fieldset>
		 	<legend>#{res['reg_serv.legendService']}</legend>
    		<p><h:outputText value="Selected Service Name:" styleClass="readerLabel"/>
    		<h:selectOneMenu id="selectService" value="#{WSClientBean.serviceSelectItemValue}" immediate="true" 
                valueChangeListener="#{WSClientBean.processServiceChange}" onchange="submit()"
                disabled="#{RegisterTBServiceBean.stage1Completed}">
                    <f:selectItems value="#{WSClientBean.serviceSelectItems}"/>
                </h:selectOneMenu> <img src="${facesContext.externalContext.requestContextPath}/graphics/help.gif" alt="" title="" onmouseover="return overlib('&lt;p style=\'width:350px;text-align:left;\'&gt;#{res['reg_serv.serviceNameTip']}&lt;/p&gt;', OFFSETX, 20, OFFSETY, -20, WIDTH, 350);" onmouseout="return nd();" />
                <h:message for="selectService" errorClass="errorMessage" infoClass="infoMessage"/>
      		</p>
			<br></br>
      		 <p><h:outputText value="Selected Operation Name:" styleClass="readerLabel"/>
             <h:selectOneMenu id="selectOperation" value="#{WSClientBean.operationSelectItemValue}" immediate="true" 
             valueChangeListener="#{WSClientBean.processOperationChange}" onchange="submit()" disabled="#{RegisterTBServiceBean.stage1Completed}">
                 <f:selectItems value="#{WSClientBean.operationSelectItems}" />                        
             </h:selectOneMenu> <img src="${facesContext.externalContext.requestContextPath}/graphics/help.gif" alt="" title="" onmouseover="return overlib('&lt;p style=\'width:350px;text-align:left;\'&gt;#{res['reg_serv.operationNameTip']}&lt;/p&gt;', OFFSETX, 20, OFFSETY, -20, WIDTH, 350);" onmouseout="return nd();" />
             <h:message for="selectOperation" errorClass="errorMessage" infoClass="infoMessage"/>
      		 </p>
       </fieldset>
	   <p><h:commandButton id="buttonUseOperation" value="continue" action="#{RegisterTBServiceBean.command_useOperation}" disabled="#{RegisterTBServiceBean.stage1Completed}"/></p>
     </h:form>
     <!--Step1 configure SampleRequest Template completed-->
      
     <!--Step2 build XML request template--> 

     <h:form id="formXmlRequestTemplate" rendered="#{RegisterTBServiceBean.renderedStage == 2}"> 
         <p><b>Stage 1 completed successfully!</b></p>
         <p>For <b>Stage 2</b> you need to create a template for your selected service.  Select the relevant input type(s) and click on the 'Add Template' button to continue. 
 </p>
                 <p>If your selected service operation can accept an <b>array of files</b> and you select this option you will need to specify the correct tag that characterise an array line item. Please ensure the selected service operation can accept an array of files before selecting this option. In order to find the tag used for <b>array items</b> you will need to inspect the service's WSDL. </p>
                 <fieldset>
                     <legend>#{res['reg_serv.legendStage2Info']}</legend>
                     <p><b>Selected Operation Name: </b>#{WSClientBean.operationSelectItemValue}<br />
                         <b>Browse WSDL: </b><a href="#" onclick="popup('popUpDiv')"> open selected service's WSDL </a> or <h:outputLink value="#{RegisterTBServiceBean.endpointURI}" target="_new"> browse externally</h:outputLink><br />
                     </p>
                 </fieldset>
		 <fieldset>
             <legend>#{res['reg_serv.legendTemplate']}</legend>
             
            <p><h:outputText value="XML Request Template:" styleClass="readerLabel"/></p>
            <h:panelGrid id="panelStep2" binding="#{RegisterTBServiceBean.componentPanelStep2}" border="2" columns="1">
            </h:panelGrid>
            <br/>   
        </fieldset>
        <h:commandButton id="buttonAddOpp" value="Add Template" action="#{RegisterTBServiceBean.command_addRequestTemplate}" disabled="#{RegisterTBServiceBean.stage2Completed}"/>
              <br/>
        	 <p>&#160;</p>
        	 <p>&#160;</p>
       		 <p>&#160;</p>
       		 <p>&#160;</p>
        	 <p>&#160;</p>
       	 	 <p>&#160;</p>
       		 <p>&#160;</p>
      </h:form>
      <!--Step2 build XML request template completed-->  
    
      <!--Step3 invoke sample request with data-->

      <h:form id="formXmlRequestSampleInvocation" enctype="multipart/form-data" 
      rendered="#{RegisterTBServiceBean.renderedStage == 3}">
          <p>For <b>Stage 3</b> you need to supply <b>sample files</b> for the configuration to work with.  If you specified an array of files in Stage 2 you should enter multiple files of the relevant file type(s), otherwise supply one file.<br />
              After entering a file into the 'Specify File' box click on the <b>blue cross</b> to add the file to the system.  Repeat this process as many times as necessary.<br />
              To remove a file that you have previously uploaded click on the <b>red X</b> beside it.<br />
Once you are happy with the files you have uploaded click on the 'Invoke Service' button to continue.</p>
           <h:message for="fileupload" errorClass="errorMessage" infoClass="infoMessage"/>
           <h:panelGroup id="panelStep3" binding="#{RegisterTBServiceBean.componentPanelStep3}">

          <fieldset>
                     <legend>#{res['reg_serv.legendStage2Info']}</legend>
                     <p><b>Selected Operation Name: </b>#{WSClientBean.operationSelectItemValue}<br />
                         <b>Required Input Type: </b>#{RegisterTBServiceBean.tagSelectItemValue}<br />
                     </p>
                 </fieldset>
               
             <fieldset>
                   <legend>#{res['reg_serv.legendStage3']}</legend>
                   
            	   <p><h:outputText value="Specify File: " styleClass="readerLabel"/>
                
               	   <t:inputFileUpload id="fileupload" rendered="true"
                    	value="#{FileUploadBean.upFile}"
                   	 	storage="file"
                   	 	styleClass="fileUploadInput"
                    	required="false"
                    	maxlength="10000000"  
                    	readonly="false" 
                    	disabled="#{RegisterTBServiceBean.stage3Completed}"/>
                
                	<h:commandLink id="link_addFileInputItem" action="#{RegisterTBServiceBean.command_addFileRefToStep3}" rendered="#{RegisterTBServiceBean.addFileButtonRendered}">
                    	<img src="${facesContext.externalContext.requestContextPath}/graphics/button_plus.gif" alt="add" title="add"/>
                	</h:commandLink>
             	   </p>
             	   <!--The panel where the already added FileArrayElements get displayed -->
                   <p><h:outputText value="Added files: " styleClass="readerLabel" rendered="#{!RegisterTBServiceBean.fileRefAdded}"/></p>
                   <h:panelGroup id="panelStep3add" binding="#{RegisterTBServiceBean.componentPanelStep3Add}"/>
             </fieldset>

             <h:commandButton id="buttonInvokeSample" value="invoke service"
             action="#{RegisterTBServiceBean.command_invokeSampleRequest}" disabled="#{RegisterTBServiceBean.stage3Completed||!RegisterTBServiceBean.fileRefAdded}"/>
          </h:panelGroup>
          <p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
      </h:form>
      <!--Step3 invoke sample request with data completed-->
     
     <!--Step4 build xpath to output element(s) and check: results ok?-->
     <h:form id="formXmlRespondsSampleInvocation" rendered="#{RegisterTBServiceBean.renderedStage == 4}">
         <p>For <b>Stage 4</b> you need to tell the system where to find the data in the XML service responce.</p>
         
         <p>Below is an example XML service response using the sample information you supplied.  If applicable for the selected service, you should now enter the XPath query to the element node where the<b>data output</b>is located. In case of a fileArray be sure you point to a single array line item.
         This should be visible in the XML service response.  You can test whether you've entered the correct path by clicking on the <b>Test Query</b> button.  This will call the service and display the output information in the 'Received service output' section.</p>
     <p>You should not press the 'Continue' button until you are certain that the expected output is being displayed.</p>
         <p>For example, if your service is a characterisation service then the file type of your sample files should be displayed alongside links to the files, whereas if you selected a migration service both input and output files should be displayed.</p>
         
         <fieldset>
               <legend>#{res['reg_serv.legendStage4Results']}</legend>
                  <h:panelGroup id="panelStep4" binding="#{RegisterTBServiceBean.componentPanelStep4}">
                      <p><h:outputText value="XML Service Response: " styleClass="readerLabel"/>
                         <h:inputTextarea id="xmlResponse" value="#{WSClientBean.xmlResponse}" cols="70" rows="20" readonly="true"/>
                    </p>
                    <br/>
                      <p><h:outputText value="XPath query to element node containing the data: " styleClass="readerLabel"/>
                         <h:inputText id="input_outputQuery" value="#{RegisterTBServiceBean.XPathToOutputQuery}" required="true"/>
                      <img src="${facesContext.externalContext.requestContextPath}/graphics/help.gif" alt="" title="" onmouseover="return overlib('&lt;p style=\'width:350px;text-align:left;\'&gt;#{res['reg_serv.xpathTip']}&lt;/p&gt;', OFFSETX, 20, OFFSETY, -20, WIDTH, 350);" onmouseout="return nd();" /></p>
                      <br/>
                      <h:commandButton id="buttonTestParseResponds" value="Test Query" action="#{RegisterTBServiceBean.command_sampleRespondsQueryTest}"/>
                  </h:panelGroup>
           </fieldset>
           <fieldset>
                   <legend>#{res['reg_serv.legendStage4Output']}</legend>
                   <p>Are you  able to see the service's output below? If so you have
                   completed this task successfully. If not you should redefine the XPath statement above and click on the  "Test Query" button again.</p>
                <p><h:panelGrid id="panelStep4Add" binding="#{RegisterTBServiceBean.componentPanelStep4Add}" border="0" columns="2"/>
                <h:outputText value="Output is of type:" styleClass="readerLabel"/>
                      <h:selectOneMenu id="selectOutputType" value="#{RegisterTBServiceBean.selectedOutputTypeValue}" disabled="#{RegisterTBServiceBean.stage4Completed}">
                        <f:selectItems value="#{RegisterTBServiceBean.selectedOutputTypeItems}" />                       
                      </h:selectOneMenu><img src="${facesContext.externalContext.requestContextPath}/graphics/help.gif" alt="" title="" onmouseover="return overlib('&lt;p style=\'width:350px;text-align:left;\'&gt;#{res['reg_serv.outputTypeTip']}&lt;/p&gt;', OFFSETX, 20, OFFSETY, -20, WIDTH, 350);" onmouseout="return nd();" />
                  </p>
                  <br/>
                <p><h:commandButton id="buttonParseResponds" value="continue" action="#{RegisterTBServiceBean.command_continueToAddServiceRegistryMetadata}"
                	disabled="#{RegisterTBServiceBean.stage4Completed}"/>
                  </p>
            </fieldset>
      </h:form>
      <!--Step4 build xpath to output element(s) and check: results ok? completed-->
     
      <!--Step5 add service metadata to be written into the registry-->
      <h:form id="formServiceRegistryMetadata" rendered="#{RegisterTBServiceBean.renderedStage == 5}">
          
          <p>Your service is almost ready to be deployed, but first you should add some metadata about the service and supply some tags to make it easier for experimenters to find your service.<br />
          Note:  As with sample files in Stage 3, you can add multiple tags by entering a name and value then clicking on the <b>blue cross</b>.  You may also remove a tag you've previously added by clicking on the <b>Red X</b>. </p>
          <p>Once you are happy with the information you have entered press the <b>Store Service</b> button to complete the registration process and make it available for Testbed Experimenters.</p>
          
          <fieldset>
                     <legend>#{res['reg_serv.legendStage2Info']}</legend>
                     <p><b>Selected Operation Name: </b>#{WSClientBean.operationSelectItemValue}<br />
                         <b>Required Input Type: </b>#{RegisterTBServiceBean.tagSelectItemValue}<br />
                     </p>
                 </fieldset>
           <fieldset>
                   <legend>#{res['reg_serv.legendStage5Metadata']}</legend>
              <p><h:outputText value="Service description " styleClass="readerLabel"/>
              	 <h:inputTextarea id="input_serviceDescription" value="#{RegisterTBServiceBean.serviceDescription}" cols="50" rows="2"/>
                 <img src="${facesContext.externalContext.requestContextPath}/graphics/help.gif" alt="" title="" onmouseover="return overlib('&lt;p style=\'width:350px;text-align:left;\'&gt;#{res['reg_serv.stage5ServiceTip']}&lt;/p&gt;', OFFSETX, 20, OFFSETY, -20, WIDTH, 350);" onmouseout="return nd();" />
              </p>
              
              <p><h:outputText value="Operation description " styleClass="readerLabel"/>
              	 <h:inputTextarea id="input_operationDescription" value="#{RegisterTBServiceBean.operationDescription}" cols="50" rows="2"/>
                 <img src="${facesContext.externalContext.requestContextPath}/graphics/help.gif" alt="" title="" onmouseover="return overlib('&lt;p style=\'width:350px;text-align:left;\'&gt;#{res['reg_serv.stage5OperationTip']}&lt;/p&gt;', OFFSETX, 20, OFFSETY, -20, WIDTH, 350);" onmouseout="return nd();" />
              </p>

              <h:panelGroup id="panelMetadata" rendered="#{RegisterTBServiceBean.selectedTagIDArray}">
              <p><h:outputText value="max. supported input files" styleClass="readerLabel"/>
                 <h:inputText id="input_maxNR" value="#{RegisterTBServiceBean.maxAllowedNrOfInputFiles}">
                       <f:validateLongRange minimum="1" maximum="100"/>
                 </h:inputText>
                 <img src="${facesContext.externalContext.requestContextPath}/graphics/help.gif" alt="" title="" onmouseover="return overlib('&lt;p style=\'width:350px;text-align:left;\'&gt;#{res['reg_serv.stage5MinTip']}&lt;/p&gt;', OFFSETX, 20, OFFSETY, -20, WIDTH, 350);" onmouseout="return nd();" />
                 <h:message for="input_maxNR" errorClass="errorMessage" infoClass="infoMessage"/>
              </p>
              <p><h:outputText value="min. required input files" styleClass="readerLabel"/>
                 <h:inputText id="input_minNR" value="#{RegisterTBServiceBean.minRequiredNrOfInputFiles}">
                      <f:validateLongRange minimum="1" maximum="100"/>
                 </h:inputText>
                 <img src="${facesContext.externalContext.requestContextPath}/graphics/help.gif" alt="" title="" onmouseover="return overlib('&lt;p style=\'width:350px;text-align:left;\'&gt;#{res['reg_serv.stage5MaxTip']}&lt;/p&gt;', OFFSETX, 20, OFFSETY, -20, WIDTH, 350);" onmouseout="return nd();" />
                 <h:message for="input_minNR" errorClass="errorMessage" infoClass="infoMessage"/>
              </p>
              <br/>
              </h:panelGroup>
              <p><h:outputText value="service operation type" styleClass="readerLabel"/>
                 <h:selectOneMenu id="selectServiceOperationType" value="#{RegisterTBServiceBean.serviceOperationTypeValue}">
                        <f:selectItems value="#{RegisterTBServiceBean.serviceOperationTypeItems}" />                       
                  </h:selectOneMenu>
                  <img src="${facesContext.externalContext.requestContextPath}/graphics/help.gif" alt="" title="" onmouseover="return overlib('&lt;p style=\'width:350px;text-align:left;\'&gt;#{res['reg_serv.stage5TypeTip']}&lt;/p&gt;', OFFSETX, 20, OFFSETY, -20, WIDTH, 350);" onmouseout="return nd();" />
              </p>
          </fieldset>
          <fieldset>
                   <legend>#{res['reg_serv.legendStage5Tags']}</legend>
          	<h:panelGroup id="panelTags">
          		<p><h:outputText value="tag name: " styleClass="readerLabel"/>
             	<h:inputText id="input_tagName" value="#{RegisterTBServiceBean.currentTagName}"/>
                <img src="${facesContext.externalContext.requestContextPath}/graphics/help.gif" alt="" title="" onmouseover="return overlib('&lt;p style=\'width:350px;text-align:left;\'&gt;#{res['reg_serv.stage5TagTip']}&lt;/p&gt;', OFFSETX, 20, OFFSETY, -20, WIDTH, 350);" onmouseout="return nd();" />
         		 </p>
         		 <p>
            	 <h:outputText value="tag value: " styleClass="readerLabel"/>
            	 <h:inputText id="input_tagValue" value="#{RegisterTBServiceBean.currentTagValue}"/>
             
              	 <h:commandLink id="link_addTag" action="#{RegisterTBServiceBean.command_addTagNameAndValue}">
               		 <img src="${facesContext.externalContext.requestContextPath}/graphics/button_plus.gif" alt="add" title="add"/>
            	</h:commandLink>
         		</p>
          		<br/>
         		 <b>added tags:</b>
            	 <ul>
               		 <c:forEach var="names" items="#{RegisterTBServiceBean.printableTagNamesAndValues}">
                    <li>
                    	<h:commandLink action="#{RegisterTBServiceBean.command_removeTag}" immediate="true">
                            <img src="${facesContext.externalContext.requestContextPath}/graphics/button_delete.gif" alt="delete" title="delete"/>
                        	<f:param name="tagNameToRemove" value="#{names}"/>
                        </h:commandLink>
                        #{names}
                    </li>
               		 </c:forEach>
           		 </ul>   
           </h:panelGroup>
          </fieldset>
          <br/>
          <h:commandButton id="buttonStoreService" value="store service" action="#{RegisterTBServiceBean.command_completeRegistration}"/>
          <br/>
      </h:form>
      <!--End of Step5 add service metadata to be written into the registry-->
      
      <!--Final: display register service success-->
      <h:form id="formRegisterSuccess" rendered="#{RegisterTBServiceBean.renderedStage > 5}">
		<p>
      	  Congratulations! You have successfully completed the registration wizard for this operation.<br />
      	  The service operation may now be selected and used by experimenters during the experiment process. 
      	  <img src="${facesContext.externalContext.requestContextPath}/graphics/state_ok.gif" alt="state-ok" title="ok"/>
      	</p>
          <fieldset>
                     <legend>#{res['reg_serv.legendStage2Info']}</legend>
                     <p><b>Registered Service: </b>#{WSClientBean.operationSelectItemValue}<br />
                     	<b>Registered Operation: </b>#{WSClientBean.operationSelectItemValue}<br />
                        <b>browse details: </b><h:commandLink value="click here" action="#{Manager_Backing.initTBServiceDisplayer}"/><br />
                     </p>
                 </fieldset>
        <hr />
                <p><b>What next?</b></p>
        	<ul>
        		<li>
					<h:commandLink value="Register another service operation" action="#{Manager_Backing.initRegisterTBService}"/>
        		</li>
        		<li>
					<h:commandLink value="Browse registered services" action="#{Manager_Backing.initTBServiceDisplayer}"/>
        		</li>
        		<li>
					<h:commandLink value="Remove registered services" action="#{Manager_Backing.initTBServiceManager}"/>
				</li>
        	</ul>
        	
      	<p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
      </h:form>

	  
</div>
</div>
</div>


<div id="leftcol">
<h3 class="leftcol">Registration Wizard Progress</h3>
<div class="innertube">
<ul class="exp">
	<h:form>
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage == 1}">
			<li class="exp_sel">
				<h:commandLink value="1. select operation" styleClass="exp" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step1" />
				</h:commandLink>
			</li>
		</h:panelGroup>
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage > 1}">
			<li class="exp">
				<h:commandLink value="1. select operation" styleClass="exp_done" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step1" />
				</h:commandLink>
			</li>
		</h:panelGroup>
		
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage lt 2}">
			<li class="exp_nd">
				<h:outputText value="2. add template"/>
			</li>
		</h:panelGroup>
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage == 2}">
			<li class="exp_sel">
				<h:commandLink value="2. add template" styleClass="exp" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step2" />
				</h:commandLink>
			</li>
		</h:panelGroup>
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage > 2}">
			<li class="exp">
				<h:commandLink value="2. add template" styleClass="exp_done" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step2" />
				</h:commandLink>
			</li>
		</h:panelGroup>
		
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage lt 3}">
			<li class="exp_nd">
				<h:outputText value="3. invoke sample"/>
			</li>
		</h:panelGroup>
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage == 3}">
			<li class="exp_sel">
				<h:commandLink value="3. invoke sample" styleClass="exp" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step3" />
				</h:commandLink>
			</li>
		</h:panelGroup>
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage > 3}">
			<li class="exp">
				<h:commandLink value="3. invoke sample" styleClass="exp_done" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step3" />
				</h:commandLink>
			</li>
		</h:panelGroup>
		
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage lt 4}">
			<li class="exp_nd">
				<h:outputText value="4. mapping of results"/>
			</li>
		</h:panelGroup>
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage == 4}">
			<li class="exp_sel">
				<h:commandLink value="4. mapping of results" styleClass="exp" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step4" />
				</h:commandLink>
			</li>
		</h:panelGroup>
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage > 4}">
			<li class="exp">
				<h:commandLink value="4. mapping of results" styleClass="exp_done" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step4" />
				</h:commandLink>
			</li>
		</h:panelGroup>
		
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage lt 5}">
			<li class="exp_nd">
				<h:outputText value="5. service metadata"/>
			</li>
		</h:panelGroup>
				<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage == 5}">
			<li class="exp_sel">
				<h:commandLink value="5. service metadata" styleClass="exp" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step5" />
				</h:commandLink>
			</li>
		</h:panelGroup>
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage > 5}">
			<li class="exp">
				<h:commandLink value="5. service metadata" styleClass="exp_done" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step5" />
				</h:commandLink>
			</li>
		</h:panelGroup>
	</h:form>
</ul>
</div>
<!-- end wizzard register Testbed service -->

<h3 class="leftcol">Navigation Options</h3>
<div class="innertube">
<ul class="exp">
	<h:form>
		<h:panelGroup>
			<li class="exp_sel">
				<h:commandLink value="register new service operation" action="#{Manager_Backing.initRegisterTBService}">
				</h:commandLink>
			</li>
		</h:panelGroup>
		<h:panelGroup>
			<li class="exp_sel">
				<h:commandLink value="browse registered services" action="#{Manager_Backing.initTBServiceDisplayer}">
				</h:commandLink>
			</li>
		</h:panelGroup>
		<h:panelGroup>
			<li class="exp_sel">
				<h:commandLink value="remove registered services" action="#{Manager_Backing.initTBServiceManager}">
				</h:commandLink>
			</li>
		</h:panelGroup>
	</h:form>
</ul>
</div>
</div>
<!-- end navigation options -->

<!-- the div for the popup screen -->
<div id="blanket" style="display:none;"></div>
<div id="popUpDiv" style="display:none;">

	<div id="overlay-menu"><p><a href="#" onclick="popup('popUpDiv')"><img src="${facesContext.externalContext.requestContextPath}/graphics/toolbar_logout.gif" alt="close" title="close"/></a> </p></div>
	<div id="overlay-main">
		<h2>Browse Service's WSDL</h2>
		<p>Browse the service's WSDL content to inspect the required syntax for array operations</p>
		<h:outputText value="selected service WSDL: " styleClass="readerLabel"/>
        <h:inputTextarea value="#{RegisterTBServiceBean.selectedServiceWSDLContent}" cols="70" rows="25" readonly="true"/>
		<p> </p>
	</div>
</div>
<!-- end popup-div -->
</ui:define>
  
  <ui:define name="footer">
		<ui:include src="/WEB-INF/templates/footer.xhtml"/>
	</ui:define>
</ui:composition>
</f:view>
</body>
</html>