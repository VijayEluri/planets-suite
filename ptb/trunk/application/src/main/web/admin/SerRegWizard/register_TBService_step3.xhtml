<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:t="http://myfaces.apache.org/tomahawk"
	xmlns:c="http://java.sun.com/jstl/core">
<body>
<f:view>
<ui:composition template="/WEB-INF/templates/main_template.xhtml">
  <ui:define name="title">
    Testbed : Register Services - step3
  </ui:define>

<ui:define name="header">
	<ui:include src="/WEB-INF/templates/header.xhtml">
		<ui:param name="page" value="register_TBservices_step3"/>
	</ui:include>
	
	<script type="text/javascript" src="${facesContext.externalContext.requestContextPath}/js/overlib/overlib.js"></script> 
	<!-- css popup javascript -->
	<script type="text/javascript"
		src="${facesContext.externalContext.requestContextPath}/js/csspopup/csspopup.js">
	</script>	
</ui:define>

<ui:define name="content">

	<div id="mainwrapper">
	<div id="maincol">
	<div class="innertubemain">
     
	<!--Step3 invoke sample request with data-->
      <h:form id="formXmlRequestSampleInvocation" enctype="multipart/form-data" rendered="#{RegisterTBServiceBean.renderedStage == 3}">
          <p>For <b>Stage 3</b> you need to supply <b>sample files</b> for the configuration to work with.  If you specified an array of files in Stage 2 you should enter multiple files of the relevant file type(s), otherwise supply one file.<br />
              After entering a file into the 'Specify File' box click on the <b>blue cross</b> to add the file to the system.  Repeat this process as many times as necessary.<br />
              To remove a file that you have previously uploaded click on the <b>red X</b> beside it.<br />
			  Once you are happy with the files you have uploaded click on the 'Invoke Service' button to continue.</p>
           <h:message for="fileupload" errorClass="errorMessage" infoClass="infoMessage"/>
           <h:panelGroup id="panelStep3" binding="#{RegisterTBServiceBean.componentPanelStep3}">

          <fieldset>
                     <legend>#{res['reg_serv.legendStage2Info']}</legend>
                     <p><b>Selected Operation Name: </b>#{WSClientBean.operationSelectItemValue}<br />
                         <b>Required Input Type: </b>#{RegisterTBServiceBean.tagSelectItemValue}<br />
                     </p>
                 </fieldset>
               
             <fieldset>
                   <legend>#{res['reg_serv.legendStage3']}</legend>
                   
            	   <p><h:outputText value="Specify File: " styleClass="readerLabel"/>
                
               	   <t:inputFileUpload id="fileupload" rendered="true"
                    	value="#{FileUploadBean.upFile}"
                   	 	storage="file"
                   	 	styleClass="fileUploadInput"
                    	required="false"
                    	maxlength="10000000"  
                    	readonly="false" 
                    	disabled="#{RegisterTBServiceBean.stage3Completed}"/>
                
                	<h:commandLink id="link_addFileInputItem" action="#{RegisterTBServiceBean.command_addFileRefToStep3}" rendered="#{RegisterTBServiceBean.addFileButtonRendered}">
                    	<img src="${facesContext.externalContext.requestContextPath}/graphics/button_plus.gif" alt="add" title="add"/>
                	</h:commandLink>
             	   </p>
             	   <!--The panel where the already added FileArrayElements get displayed -->
                   <p><h:outputText value="Added files: " styleClass="readerLabel" rendered="#{RegisterTBServiceBean.fileRefAdded}"/></p>
                   <h:panelGroup id="panelStep3add" binding="#{RegisterTBServiceBean.componentPanelStep3Add}"/>

             </fieldset>

             <p><h:commandButton id="buttonInvokeSample" value="invoke service"
             action="#{RegisterTBServiceBean.command_invokeSampleRequest}" disabled="#{RegisterTBServiceBean.stage3Completed||!RegisterTBServiceBean.fileRefAdded}"/></p>
          </h:panelGroup>
          <p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
        <p>&#160;</p>
      </h:form>
      <!--Step3 invoke sample request with data completed-->
</div>
</div>
</div>


<div id="leftcol">
<h3 class="leftcol">Registration Wizard Progress</h3>
<div class="innertube">
<ul class="exp">
	<h:form>
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage == 1}">
			<li class="exp_sel">
				<h:commandLink value="1. select operation" styleClass="exp" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step1" />
				</h:commandLink>
			</li>
		</h:panelGroup>
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage > 1}">
			<li class="exp">
				<h:commandLink value="1. select operation" styleClass="exp_done" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step1" />
				</h:commandLink>
			</li>
		</h:panelGroup>
		
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage lt 2}">
			<li class="exp_nd">
				<h:outputText value="2. add template"/>
			</li>
		</h:panelGroup>
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage == 2}">
			<li class="exp_sel">
				<h:commandLink value="2. add template" styleClass="exp" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step2" />
				</h:commandLink>
			</li>
		</h:panelGroup>
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage > 2}">
			<li class="exp">
				<h:commandLink value="2. add template" styleClass="exp_done" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step2" />
				</h:commandLink>
			</li>
		</h:panelGroup>
		
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage lt 3}">
			<li class="exp_nd">
				<h:outputText value="3. invoke sample"/>
			</li>
		</h:panelGroup>
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage == 3}">
			<li class="exp_sel">
				<h:commandLink value="3. invoke sample" styleClass="exp" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step3" />
				</h:commandLink>
			</li>
		</h:panelGroup>
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage > 3}">
			<li class="exp">
				<h:commandLink value="3. invoke sample" styleClass="exp_done" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step3" />
				</h:commandLink>
			</li>
		</h:panelGroup>
		
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage lt 4}">
			<li class="exp_nd">
				<h:outputText value="4. mapping of results"/>
			</li>
		</h:panelGroup>
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage == 4}">
			<li class="exp_sel">
				<h:commandLink value="4. mapping of results" styleClass="exp" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step4" />
				</h:commandLink>
			</li>
		</h:panelGroup>
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage > 4}">
			<li class="exp">
				<h:commandLink value="4. mapping of results" styleClass="exp_done" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step4" />
				</h:commandLink>
			</li>
		</h:panelGroup>
		
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage lt 5}">
			<li class="exp_nd">
				<h:outputText value="5. service metadata"/>
			</li>
		</h:panelGroup>
				<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage == 5}">
			<li class="exp_sel">
				<h:commandLink value="5. service metadata" styleClass="exp" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step5" />
				</h:commandLink>
			</li>
		</h:panelGroup>
		<h:panelGroup rendered="#{RegisterTBServiceBean.completedStage > 5}">
			<li class="exp">
				<h:commandLink value="5. service metadata" styleClass="exp_done" action="#{RegisterTBServiceBean.command_renderWizzardStep}">
					<f:param name="wizzardStep" value="step5" />
				</h:commandLink>
			</li>
		</h:panelGroup>
	</h:form>
</ul>
</div>
<!-- end wizzard register Testbed service -->

<h3 class="leftcol">Navigation Options</h3>
<div class="innertube">
<ul class="exp">
	<h:form>
		<h:panelGroup>
			<li class="exp_sel">
				<h:commandLink value="register new service operation" action="#{Manager_Backing.initRegisterTBService}">
				</h:commandLink>
			</li>
		</h:panelGroup>
		<h:panelGroup>
			<li class="exp_sel">
				<h:commandLink value="browse registered services" action="#{Manager_Backing.initTBServiceDisplayer}">
				</h:commandLink>
			</li>
		</h:panelGroup>
		<h:panelGroup>
			<li class="exp_sel">
				<h:commandLink value="remove registered services" action="#{Manager_Backing.initTBServiceManager}">
				</h:commandLink>
			</li>
		</h:panelGroup>
	</h:form>
</ul>
</div>
</div>
<!-- end navigation options -->

<!-- the div for the popup screen -->
<div id="blanket" style="display:none;"></div>
<div id="popUpDiv" style="display:none;">

	<div id="overlay-menu"><p><a href="#" onclick="popup('popUpDiv')"><img src="${facesContext.externalContext.requestContextPath}/graphics/toolbar_logout.gif" alt="close" title="close"/></a> </p></div>
	<div id="overlay-main">
		<h2>Browse Service's WSDL</h2>
		<p>Browse the service's WSDL content to inspect the required syntax for array operations</p>
		<h:outputText value="selected service WSDL: " styleClass="readerLabel"/>
        <h:inputTextarea value="#{RegisterTBServiceBean.selectedServiceWSDLContent}" cols="70" rows="25" readonly="true"/>
		<p> </p>
	</div>
</div>
<!-- end popup-div -->
</ui:define>
  
  <ui:define name="footer">
		<ui:include src="/WEB-INF/templates/footer.xhtml"/>
	</ui:define>
</ui:composition>
</f:view>
</body>
</html>