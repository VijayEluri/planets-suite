<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html
	 xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:s="http://jboss.com/products/seam/taglib"
	xmlns:a4j="http://richfaces.org/a4j"
	xmlns:rich="http://richfaces.org/rich"
	xmlns:p="http://planets-project.eu/taglibs/plato"
	xmlns:c="http://java.sun.com/jstl/core">
<head>
<title>Requirements Expert</title>
      <meta http-equiv="Content-Type"
         content="text/html; charset=UTF-8" />
      <meta name="description"
         content="PLANETS Preservation Planning Tool" />
      <meta http-equiv="Pragma" content="no-cache" />
      <link rel="shortcut icon" type="image/png"
         href="../img/plato_icon.png" />
      <link rel="stylesheet" href="../css/content.css" type="text/css" />
      <link rel="stylesheet" media="screen" href="../css/plato.css"
         type="text/css" title="Plato" />
      <link rel="stylesheet" media="screen" href="../css/header.css"
         type="text/css" title="Plato" />
      <link rel="stylesheet" href="../css/menu.css" type="text/css" />
      <link rel="stylesheet" media="screen" href="../css/footer.css"
         type="text/css" title="Plato" />
      <link rel="stylesheet" media="print" href="../css/print.css"
         type="text/css" />
      <link rel="stylesheet" href="../css/content-treetable.css"
         type="text/css" />
</head>



<body id="top">
<s:div id="content" style="margin-bottom: 1em;">
		<f:facet name="aroundInvalidField">
			<s:span styleClass="errors">
				<s:message styleClass="errors" />
			</s:span>
		</f:facet>

		<h1>Requirements Expert</h1>
		<div class="margin-bottom-huge"></div>
         <a4j:region id="sessionRegion">
         <!-- Contact server every 20 sec. to keep the session alive
              -other aj4-ppr requests should use the same eventQueue (pprQueue)
         -->
         <h:form id="sessionForm">
            <a4j:poll id="keepAlive" interval="300000" enabled="#{sessionManager != null}"
               reRender="keepAlive" limitToList="true" eventsQueue="pprQueue" actionListener="#{sessionManager.keepAlive}"/>
<!-- Could be used to display the polling action, maybe spinning the planetsLogo above?
            <a4j:status id="keepAliveStatus">
                <f:facet name="start">
                    <h:graphicImage value="/img/spinner.gif" />
                </f:facet>
            </a4j:status>
-->
         </h:form>
         </a4j:region>
		
		<a4j:form id="mainform">
		<h:inputText id="changedflag" value="#{changed}" style="display:none" />
		<div style="width: 100%; height: 80%">
			<div style="float:left; width:50%">	   
  				<rich:panel id="libraryTreePnl" styleClass="expertTree" bodyClass="scrollbar" >
                	<f:facet name="header">
  					    Library Tree
  					</f:facet>
  						<div style="vertical-align: top;" >
							<rich:tree
								id="libraryTree"
								switchType="client" 
								immediate="true"
								showConnectingLines="false"
								adviseNodeOpened="#{libraryTreeHelper.adviseNodeOpened}"
								ajaxSingle="true"
								ajaxSubmitSelection="true" 
								nodeSelectListener="#{requirementsExpert.processLibSelection}"
								reRender="libraryDetails, useTreeDiv"
								>

								<rich:recursiveTreeNodesAdaptor
									roots="#{libraryTree.root}" var="node"
									nodes="#{node.children}">
									<rich:treeNode 
					  					highlightedClass="highlighted"
										iconLeaf="" 
										icon="">
										<h:outputText value="#{node.name}" />
										<a4j:commandLink action="#{requirementsExpert.addLibraryRequirement(node)}" value=" +Requirement " rendered="#{not node.leaf}" ajaxSingle="true" reRender="libraryTree" eventsQueue="reqexp"/>										
										<a4j:commandLink action="#{requirementsExpert.addCriterion(node)}" value=" +Criterion " rendered="#{not node.leaf}" ajaxSingle="true" reRender="libraryTree" eventsQueue="reqexp"/>										
										<a4j:commandLink action="#{requirementsExpert.removeLibraryNode(node)}" value=" -remove " rendered="#{(node.leaf) or (not node.predefined)}" ajaxSingle="true" reRender="useTreeDiv, libraryTree, libraryDetails" eventsQueue="reqexp"/>										
									</rich:treeNode>
								</rich:recursiveTreeNodesAdaptor>
							</rich:tree>
							</div>
  				</rich:panel>
				<s:div id="useTreeDiv" style="height: 2em;">
					<div style="float:left; height: 100%; ">
					Use node <b><i><h:outputText value="#{(selectedLibNode != null) ? selectedLibNode.name : '- please select one -'}"/></i></b> ...
					</div>
					<div style="float:right; height: 100%;"> 
					<b><a4j:commandLink action="#{requirementsExpert.useLibraryFragment()}" disabled="#{(selectedLibNode == null)or(selectedReqNode == null)}" reRender="reqTree">
						append it <img src="../img/go-next.png" width="24px" height="24px" style="vertical-align: middle;" />
						</a4j:commandLink>
					</b>
					</div>
				</s:div>
  				
				<rich:panel id="libraryDetails"  styleClass="expertDetail" bodyClass="rich-laguna-panel-no-header">
					Some detailed information how the selected criterion is automatically measured and evaluated.
					<s:div rendered="#{(selectedLibNode == null)}">
					Please select a criterion.
					</s:div> 
					<s:div rendered="#{(selectedLibNode != null)}">
					
						<b><h:outputText value="Name: "/></b>
						<h:inputText value="#{selectedLibNode.name}"  style="width:70%;" rendered="#{(selectedLibNode.leaf) or (not selectedLibNode.predefined)}">
							<a4j:support event="onchange" reRender="libraryTree, libraryDetails"/>
						</h:inputText>
						<h:outputText value="#{selectedLibNode.name}" rendered="#{(not selectedLibNode.leaf) and selectedLibNode.predefined}"/>
						<s:div rendered="#{selectedLibNode.leaf}">
						   <div>
						    <b>Information for automatic measurement:</b> <br/>
						    <h:outputText value="Type: #{ (selectedLibNode.category != null) ? selectedLibNode.category : ' - no specific type - '}" /><br/>
							<h:inputText value="#{selectedLibNode.measurementInfo.asURI}" style="width:80%;">
									<a4j:support event="onchange" reRender="libraryDetails" />
						    </h:inputText>
							</div>
							<div align="right">
								<a4j:commandButton action="#{requirementsExpert.applyMeasuremntInfo}" value="Apply Measurement Information" reRender="reqDetails" disabled="#{not selectedReqNode.leaf}"/>
							</div>
						</s:div>
					</s:div>
				</rich:panel>
					<div>
						<h:commandButton action="#{requirementsExpert.saveLibrary()}" value="Save Library" />
					</div>
				
				</div>
				<div style="float:right; width:50%">
	  				<rich:panel id="reqTreePnl" styleClass="expertTree" bodyClass="scrollbar">
	  					<f:facet name="header">
	  						Requirements Tree 
	  					</f:facet>
								<rich:tree
									id="reqTree"
									switchType="client" 
									immediate="true"
									showConnectingLines="false"
									adviseNodeOpened="#{treeHelper.adviseNodeOpened}" 
									style="padding-top:10px;"
									ajaxSingle="true"
									nodeSelectListener="#{requirementsExpert.processReqSelection}"
									ajaxSubmitSelection="true" 
									reRender="reqDetails, useTreeDiv, libraryDetails, appendNodeDiv"								
									eventsQueue="reqexp"
									>
	
									<rich:recursiveTreeNodesAdaptor
										roots="#{reqexpTree.root}" var="node"
										nodes="#{node.children}">
										<rich:treeNode 
						  					highlightedClass="highlighted"
											iconLeaf="" 
											icon="">
											<h:outputText value="#{node.name}" />
											<a4j:commandLink action="#{requirementsExpert.addNode(node)}" value=" +Requirement " rendered="#{not node.leaf}" ajaxSingle="true" reRender="reqTree" eventsQueue="reqexp"/>										
											<a4j:commandLink action="#{requirementsExpert.addLeaf(node)}" value=" +Criterion " rendered="#{not node.leaf}" ajaxSingle="true" reRender="reqTree" eventsQueue="reqexp"/>										
											<a4j:commandLink action="#{requirementsExpert.removeNode(node)}" value=" -remove " ajaxSingle="true" reRender="reqTree, reqDetails, useTreeDiv" eventsQueue="reqexp"/>										
										</rich:treeNode>
									</rich:recursiveTreeNodesAdaptor>
								</rich:tree>
	  				</rich:panel>
					<s:div id="appendNodeDiv" style="height: 2em; margin-left: 2em;">
					<h:outputText value="#{(selectedReqNode.leaf) ? ' replace criterion: ' : ' add to requirement: ' }" rendered="#{(selectedReqNode != null)}"/> <b><i><h:outputText value="#{(selectedReqNode != null)? selectedReqNode.name : ' - please select a target node - '}"/></i></b>
					</s:div>
					<rich:panel id="reqDetails" styleClass="expertDetail" bodyClass="rich-laguna-panel-no-header">
						Some detailed information how the selected requirement is automatically measured and evaluated.
						<s:div rendered="#{(selectedReqNode == null)}">
						Please select a requirement.
						</s:div> 
						<s:div rendered="#{(selectedReqNode != null)}">
						
							<b><h:outputText value="Name: "/></b>
							<h:inputText value="#{selectedReqNode.name}"  style="width:70%;">
								<a4j:support event="onchange" reRender="reqTree, reqDetails"/>
							</h:inputText>
							<s:div rendered="#{selectedReqNode.leaf}">
							    <b>Information for automatic measurement:</b> <br/>
							    <h:outputText value="Type: #{ (selectedReqNode.category != null) ? selectedReqNode.category : ' - no specific type - '}" /><br/>
							    <h:inputText value="#{selectedReqNode.measurementInfo.asURI}" style="width:80%;" >
							    	<a4j:support event="onchange" reRender="reqDetails"/>
							    </h:inputText>
							</s:div>
						</s:div>
					</rich:panel>
					<div>
						<h:commandButton action="#{requirementsExpert.saveRequirements()}" value="Save Requirements" />
					</div>
				</div>
	</div>
	<div>
		If you have changed both, library and requirements tree, you should: <h:commandButton action="#{requirementsExpert.save()}" value="Save all changes" />
	</div>
	<div>
		<h:commandButton action="#{xml.exportLibrary()}" value="Export Library to xml file..." />
	</div>
	
  	</a4j:form>
	<h:form id="uploadform" enctype="multipart/form-data">
	<h3>Load Library from file:</h3>
	<s:fileUpload data="#{xml.file}" id="fileupload" filename="#{xml.fileName}"/>
			<h:commandButton id="uploadlibrary" value="... Import Library"
				action="#{xml.uploadLibrary}" /><br/>
	</h:form>
			
</s:div>
</body>
</html>