<?xml version="1.0"?>

<!-- ======================================================================= -->
<!-- Planets Services deployer build file                                    -->
<!-- ======================================================================= -->

<project name="droid" default="deploy" basedir=".">

	<!-- Specify configuration for this project -->
	<property name="app.name" value="${ant.project.name}" />
	<property name="app.dir" location="." />
    <!-- Specify the build type: ejb, war or ear. -->
    <property name="psuite.app.build.type" value="ejb"/>

    <!-- Specify if this application requires further software to be installed -->
    <property name="psuite.app.deploy.mode" value="pure-java" />

	<property name="src.dir" location="${app.dir}/src/main/java" />
	<property name="lib.dir" location="${app.dir}/lib" />
	<property name="src.resources" location="${app.dir}/src/main/resources" />
	<property name="src.config" location="${app.dir}/src/main/config" />
	<property name="src.config.properties" value="Droid.properties" />
  
    <property name="test.src.dir" location="${app.dir}/src/test/java" />
	<property name="test.resources" location="${app.dir}/src/test/resources" />
	<property name="test.config" location="${app.dir}/src/test/config" />
	<property name="test.config.properties" value="Droid.properties" />
	<property name="test.local" value="" />
	<property name="test.standalone" value="" />
	<property name="test.server" value="" />

	<!-- Include the build targets etc -->
	<property name="psuite.root.dir" location="../.." />
	<property name="psuite.test.config" location="${psuite.root.dir}/test/config" />
	<import file="${psuite.root.dir}/build.common.xml" />

	<!-- OK, this is the DROID config stuff, this may be fun -->
	<!-- First copy the test config file from test config area to psuite/test/config -->
	<copy file="${test.config}/${test.config.properties}" tofile="${psuite.test.config}/${test.config.properties}" overwrite="true" />

	<!-- We want the build properties file to get the config directory value -->
	<property file="${psuite.root.dir}/build.properties"/>
	
	<!-- Check that ${if_server.conf} is set -->
	<if>
		<isset property="if_server.conf" />
		<then>
			<!-- Copy the config template to the config dir -->
			<copy file="${src.config}/${src.config.properties}.template" tofile="${if_server.conf}/${src.config.properties}" overwrite="true"/>
			<!-- Substitute the conf directory value from the build properties -->
		    <replace file="${if_server.conf}/${src.config.properties}">
		    	<replacefilter token="@planets.server.conf@" value="${if_server.dir}" />
		    </replace>

			<!-- THIS IS THE LIVE DROID SIG FILE, test use of the V16 sig file -->
			<!-- Using vars (from ant contrib) so that the same name properties can be used in the test
				 config file and the live config file.  These are a little "naughty" but ant properties
				 wouldn't get the job done --> 
			<var name="${droid.sigfile.location}" file="${if_server.conf}/${src.config.properties}" />
			<var name="${droid.sigfile.name}" file="${if_server.conf}/${src.config.properties}" />
			<echo message="COPYING ${src.resources}/DROID_SignatureFile_V16.xml TO ${droid.sigfile.location}/${droid.sigfile.name}"></echo>
		    <copy file="${src.resources}/DROID_SignatureFile_V16.xml" tofile="${droid.sigfile.location}/${droid.sigfile.name}" overwrite="true" />
		</then>
	</if>


</project>
