<?xml version="1.0"?>

<!-- ======================================================================= -->
<!-- Planets Suite utile deployer build file                                    -->
<!-- ======================================================================= -->
<project name="core-utils" default="compile:core" basedir=".">

	<!-- Set up the application name and prefix -->
    <property name="app.name" value="${ant.project.name}"/>
    <property name="app.prefix" value="${ant.project.name}"/>

	<!-- Now some directory name properties for building -->
	<property name="app.dir" location="."/>
    <property name="src.dir" location="${app.dir}/src/main/java"/>
    <property name="src.resources" location="${app.dir}/src/main/resources"/>
	<property name="src.config" location="${app.dir}/src/main/config" />
    <property name="lib.dir" location="${app.dir}/lib"/>
    <property name="psuite.root.dir" location="../.." />
	<property name="psuite.test.config" location="${psuite.root.dir}/test/config" />
    <property name="test.src.dir" location="${app.dir}/src/test/java"/>
	<property name="test.resources" location="${app.dir}/src/test/resources" />
	<property name="test.config" location="${app.dir}/src/test/config" />

	<property name="psuite.app.deploy.mode" value="pure-java" />
	<property name="psuite.app.build.type" value="jar" />
    <property name="psuite.root.dir" location="../.." />

	<property name="test.config.properties" value="Common.properties.test" />
	<property name="src.config.properties" value="Common.properties" />

	<import file="${psuite.root.dir}/build.common.xml"/>

    <!-- update the server configuration -->
    <property file="${psuite.root.dir}/build.properties"/>
    <property name="server.properties.file.name" value="${src.dir}/eu/planets_project/ifr/core/common/conf/planets-server-config.properties"/>
    <echo message="Configuring server details as ${if_server.host}:${if_server.port}/${if_server.ssl.port}."/>
    <copy file="${server.properties.file.name}.template" tofile="${server.properties.file.name}" overwrite="true"/>
    <replace file="${server.properties.file.name}">
      <replacefilter token="@framework.host@" value="${if_server.host}" />
      <replacefilter token="@framework.port@" value="${if_server.port}" />
      <replacefilter token="@framework.ssl.port@" value="${if_server.ssl.port}" />
    </replace>

	<!-- Unit testing definitions -->
    <property name="test.src.dir" location="${app.dir}/src/test/java" />
	<property name="test.local" value="" />
	<property name="test.standalone" value="" />
    <property name="test.server" value="" />

	<!-- First copy the test config file from test config area to pserv/test/config -->
	<echo message="COPYING ${test.config}/${test.config.properties} TO ${psuite.test.config}/${source.config.properties}"></echo>
	<copy file="${test.config}/${test.config.properties}" tofile="${psuite.test.config}/${src.config.properties}" overwrite="true" />

	<!-- Check that ${if_server.conf} is set -->
	<if>
		<isset property="if_server.conf" />
		<then>
			<!-- Copy the config template to the config dir -->
			<copy file="${src.config}/${src.config.properties}.template" tofile="${if_server.conf}/${src.config.properties}" overwrite="true"/>
			<!-- Substitute the conf directory value from the build properties -->
		    <replace file="${if_server.conf}/${src.config.properties}">
		    	<replacefilter token="@planets.server.conf@" value="${if_server.conf}" />
		    </replace>
			<property file="${if_server.conf}/${src.config.properties}"  />

			<!-- THIS IS THE LIVE DROID SIG FILE, test use of the V16 sig file -->
		    <copy file="${src.resources}/DROID_SignatureFile_V26.xml" tofile="${droid.sigfile.location}/${droid.sigfile.name}" overwrite="true" />
		</then>
	</if>
	
</project>
