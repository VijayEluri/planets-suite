<?xml version="1.0"?>
<!-- ======================================================================= -->
<!-- Planets Services deployer build file                                    -->
<!-- ======================================================================= -->
<project name="Planets Service Deployer" default="deploy:pure-java" basedir=".">

  <!-- =================================================================== -->
                                                       
  <taskdef resource="net/sf/antcontrib/antcontrib.properties">
    <classpath>
      <pathelement location="lib/ant-contrib-1.0b3.jar"/>
    </classpath>
  </taskdef>

  <!-- =================================================================== -->  

  
  <!-- Check that the build properties have been set up. -->
  <property file="build.properties"/>
  <target name="props:set" unless="if_server.dir">
	<echo level="warn" message="For full deployment on the IF, please set up your build.properties file.  Read the README.txt for more information. "/>
    <echo message="No build.properties found."/>
  </target>
  <target name="profile:set" unless="pserv.deploy.profile">
    <echo level="warn" message="For profile-based deployment, you must set pserv.deploy.profile. See build.properties.template."/>
    <fail message="No pserv.deploy.profile found."/>
  </target>
  <target name="test:profile:set" unless="pserv.test.profile">
    <echo level="warn" message="For profile-based testing, you can set pserv.test.profile. Defaulting to pserv.deploy.profile. See build.properties.template."/>
    <property name="pserv.test.profile" value="${pserv.deploy.profile}" />
    <property name="pserv.test.profile.pure-java" value="${pserv.deploy.profile.pure-java}" />
  </target>
	
  <!-- These are the shared PServ classes. -->
  <target name="deploy:common" depends="props:set">
    <if>
      <isset property="if_server.dir"/>
      <then>
        <echo message="if_server.dir is set - will deploy to ${if_server.dir}"/>
      </then>
      <else>
        <echo message="if_server.dir is NOT set - will not deploy, only build."/>
      </else>
    </if>
    <ant dir="IF/common" inheritAll="false"/>
  	<ant dir="IF/techreg" inheritAll="false" />
    <ant target="deploy:api"/>
  </target>
  <target name="compile:common" depends="props:set">
    <ant dir="IF/common" inheritAll="false" target="compile:common"/>
    <ant dir="IF/techreg" inheritAll="false" />
  </target>

    <target name="compile:generic" depends="compile:common">
      <ant dir="IF/generic" inheritAll="false" target="compile:common"/>
    </target>


  <!-- ================= -->
  
  <!-- This target installs the IF example services. -->
  <target name="deploy:examples" depends="props:set,deploy:common">
    <ant dir="IF/generic" inheritAll="false"/>
    <ant dir="IF/simple" inheritAll="false"/>
  </target>
    
  <!-- =================================================================== -->
    
  <!-- This target installs all services. -->
  <path id="all.sub.projects">
    <fileset dir="${basedir}">
      <include name="*/*/build.xml"/>
      <exclude name="IF/Sample/*"/>
      <exclude name="lib/**"/>
    </fileset>
  </path>
  
  <target name="deploy:all" depends="props:set,deploy:common">
    <foreach target="deploy:sub" param="sub.build" inheritall="false">
      <path refid="all.sub.projects"/>
    </foreach>
  </target>
  <target name="deploy:sub">
    <echo message="In ${sub.build}"/>
    <dirname property="sub.build.dir" file="${sub.build}"/>
    <ant antfile="${sub.build}" inheritAll="false" dir="${sub.build.dir}">
      <property name="have.deployed.common" value="true"/>
    </ant>
  </target>
  
  <!-- ================= -->
  <!-- Also support deployment profiles -->
  
  <target name="deploy:profile" depends="profile:set,props:set,deploy:common">
    <if>
      <equals arg1="${pserv.deploy.profile.pure-java}" arg2="true" />
      <then>
        <echo message="pserv.deploy.profile.pure-java is set - will deploy pure-java services"/>
        <ant target="deploy:pure-java"/>
      </then>
    </if>
    <!-- Now deploy the profile -->
    <foreach target="deploy:profile:sub" param="sub.build" inheritall="false" list="${pserv.deploy.profile}" delimiter=", "/>
  </target>
  <target name="deploy:profile:sub">
    <ant antfile="${basedir}/${sub.build}/build.xml" inheritAll="false" dir="${basedir}/${sub.build}">
      <property name="have.deployed.common" value="true"/>
    </ant>
  </target>
  
  <!-- ================= -->

  <target name="deploy:pure-java" depends="props:set,deploy:common">
    <foreach target="deploy:sub:pure-java" param="sub.build" inheritall="false">
      <path refid="all.sub.projects"/>
    </foreach>
  </target>
  <target name="deploy:sub:pure-java">
    <echo message="In ${sub.build}"/>
    <dirname property="sub.build.dir" file="${sub.build}"/>
    <ant antfile="${sub.build}" inheritAll="false" target="deploy:pure-java" dir="${sub.build.dir}">
      <property name="have.deployed.common" value="true"/>
    </ant>
  </target>
  
  <!-- ================= -->

  <target name="deploy:api">
    <foreach target="deploy:sub:api" param="sub.build" inheritall="false">
      <path refid="all.sub.projects"/>
    </foreach>
  </target>
  <target name="deploy:sub:api">
    <!-- echo message="In ${sub.build}"/ -->
    <dirname property="sub.build.dir" file="${sub.build}"/>
    <ant antfile="${sub.build}" inheritAll="false" target="build:api" dir="${sub.build.dir}"/>
  </target>
  
  <!-- ================= -->

  <target name="test:all" depends="props:set,deploy:common,test:reports:clean">
    <foreach target="test:sub" param="sub.build" inheritall="false">
      <path refid="all.sub.projects"/>
    </foreach>
  </target>
  <target name="test:sub">
    <echo message="In ${sub.build}"/>
    <dirname property="sub.build.dir" file="${sub.build}"/>
    <ant antfile="${sub.build}" inheritAll="false" target="test-if-testable" dir="${sub.build.dir}">
      <property name="have.deployed.common" value="true"/>
    </ant>
  </target>
  
  <!-- ================= -->
  <!-- Also support testing deployment profiles -->
  
  <target name="test:profile" depends="profile:set,test:profile:set,props:set,deploy:common,test:reports:clean">
    <if>
      <equals arg1="${pserv.test.profile.pure-java}" arg2="true" />
      <then>
        <echo message="pserv.test.profile.pure-java is set - will test pure-java services"/>
        <ant target="test:pure-java"/>
      </then>
    </if>
    <!-- Now test the profile -->
    <foreach target="test:profile:sub" param="sub.build" inheritall="false" list="${pserv.test.profile}" delimiter=", "/>
  </target>
  <target name="test:profile:sub">
    <echo message="In ${sub.build}"/>
    <ant antfile="${basedir}/${sub.build}/build.xml" inheritAll="false" dir="${basedir}/${sub.build}" target="test-if-testable" >
      <property name="have.deployed.common" value="true"/>
    </ant>
  </target>
  
  <!-- ================= -->

  <target name="test:pure-java" depends="props:set,deploy:common,test:reports:clean">
        <foreach target="test:sub:pure-java" param="sub.build"
            inheritall="false">
            <path refid="all.sub.projects" />
        </foreach>
  </target>
  <target name="test:sub:pure-java">
        <echo message="Test in ${sub.build}" />
        <dirname property="sub.build.dir" file="${sub.build}" />
        <ant antfile="${sub.build}" inheritAll="false" target="test:pure-java"
            dir="${sub.build.dir}">
            <property name="have.deployed.common" value="true" />
        </ant>
  </target>
  
  <!-- ================= -->
  
  <!-- <target name="undeploy:all" depends="props:set,deploy:common"> -->
  <target name="undeploy:all" depends="props:set">
    <foreach target="undeploy:sub" param="sub.build" inheritall="false">
      <path refid="all.sub.projects"/>
    </foreach>
  </target>
  <target name="undeploy:sub">
    <echo message="In ${sub.build}"/>
    <dirname property="sub.build.dir" file="${sub.build}"/>
    <ant antfile="${sub.build}" inheritAll="false" target="undeploy" dir="${sub.build.dir}">
      <property name="have.deployed.common" value="true"/>
    </ant>
  </target>

  <!-- =================================================================== -->
    
  <path id="all.sub.project.builds">
    <dirset dir="${basedir}" includes="*/*/build" excludes="lib/**"/>
  </path>
  
  <target name="clean:all">
    <delete dir="build"/>
    <foreach target="clean:sub" param="sub.build.dir" inheritall="false">
      <path refid="all.sub.project.builds"/>
    </foreach>
  </target>
  <target name="clean:sub">
    <echo message="Got: ${sub.build.dir}"/>
    <delete dir="${sub.build.dir}"/>
  </target>

  <!-- =================================================================== -->
    
  <target name="list:all" depends="props:set">
    <property name="property.list.file" value="${basedir}/property-types.txt"/>
    <echo file="${property.list.file}" message="Name  |  Deploy Mode  |  Deploy Type | Tests Local | Test Standalone | Test Server${line.separator}"/>
    <echo file="${property.list.file}" message="------|---------------|--------------|-------------|-----------------|------------${line.separator}" append="true"/>
    <foreach target="list:sub" param="sub.build" inheritall="false">
      <path refid="all.sub.projects"/>
    </foreach>
    <echo message="Generated summary of projects can be found in ${property.list.file}."/>
  </target>
  <target name="list:sub">
    <echo message="In ${sub.build}"/>
    <dirname property="sub.build.dir" file="${sub.build}"/>
    <ant antfile="${sub.build}" inheritAll="false" target="show:type" dir="${sub.build.dir}">
      <property name="have.deployed.common" value="true"/>
    </ant>
  </target>

  <!-- =================================================================== -->
    
  <target name="test:gen:summary">
    <!-- collect the results into a summary report -->
    <junitreport todir="tests/summary">
      <fileset dir="tests/reports">
        <include name="TEST-*.xml"/>
      </fileset>
      <report format="frames" todir="test/summary"/>
    </junitreport>
    <echo message="Wrote summary test report to: tests/summary" />
  </target>
  
  <target name="test:reports:clean">
    <delete>
      <fileset dir="tests/reports">
        <include name="TEST-*.xml"/>
      </fileset>
    </delete>
  </target>
  
</project>
