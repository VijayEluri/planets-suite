<?xml version="1.0"?>

<!-- ======================================================================= -->
<!-- Planets Services deployer build file                                    -->
<!-- ======================================================================= -->
<project name="if-common" default="compile:common" basedir=".">
    <property name="appName" value="${ant.project.name}"/>
    <property name="appDir" location="."/>
    <property name="src.dir" location="${appDir}/src/java"/>
    <property name="lib.dir" location="${appDir}/lib"/>
    <property name="src.resources" location="${appDir}/src/resources"/>
    <property name="src.web" location="${appDir}/src/web"/>
	<property name="src.config" location="${appDir}/src/config" />
	<property name="src.config.properties" value="Common.properties" />
    <property name="test.src.dir" location="${appDir}/src/test/java"/>
	<property name="test.resources" location="${appDir}/src/test/resources" />
	<property name="test.config" location="${appDir}/src/test/config" />
	<property name="test.config.properties" value="Common.properties" />
	<property name="pserv.app.deploy.mode" value="pure-java" />
	<property name="pserv.app.build.type" value="jar" />
    <property name="pserv.root.dir" location="../.." />
	<property name="pserv.test.config" location="${pserv.root.dir}/test/config" />
    <import file="${pserv.root.dir}/build.common.xml"/>

    <!-- update the server configuration -->
    <property name="server.properties.file.name" value="${src.dir}/eu/planets_project/ifr/core/common/conf/planets-server-config.properties"/>
    <echo message="Configuring server details as ${if_server.host}:${if_server.port}/${if_server.ssl.port}."/>
    <copy file="${server.properties.file.name}.template" tofile="${server.properties.file.name}" overwrite="true"/>
    <replace file="${server.properties.file.name}">
      <replacefilter token="@framework.host@" value="${if_server.host}" />
      <replacefilter token="@framework.port@" value="${if_server.port}" />
      <replacefilter token="@framework.ssl.port@" value="${if_server.ssl.port}" />
    </replace>

  
    <taskdef name="schemagen" classname="com.sun.tools.jxc.SchemaGenTask">
      <classpath id="schemagen_classpath">
        <fileset dir="${pserv.root.dir}/lib/standalone" includes="*.jar" />
        <fileset dir="${pserv.root.dir}/lib/jaxws-ri-2.1.4/lib" includes="*.jar" />
      </classpath>
    </taskdef>
    
    <target name="gen:SDschema">
        <schemagen srcdir="${src.dir}/eu/planets_project/services/datatypes" destdir="${appDir}/src/resources">
                
                <classpath refid="schemagen_classpath"/>

                <exclude name="ImmutableDigitalObject.java"/>
                <exclude name="DigitalObject.java"/>
                <exclude name="Agent.java"/>  
                <exclude name="Checksum.java"/>  
                <exclude name="Content.java"/>
                <exclude name="Event.java"/>
                <exclude name="Metadata.java"/>
                <exclude name="Properties.java"/>


                <schema namespace="http://www.planets-project.eu/services" file="service_description.xsd"/>
		<schema namespace="http://purl.org/dc/terms/" file="dcterms.xsd"/>
		<schema namespace="" file="nonamespace.xsd"/>
	</schemagen>
    </target>
	
    <!-- Unit testing definitions -->
    <property name="test.src.dir" location="${appDir}/src/test/java" />
	<property name="test.local" value="" />
	<property name="test.standalone" value="" />
    <property name="test.server" value="" />

	<!-- OK, this is the config stuff -->
	<!-- First copy the test config file from test config area to pserv/test/config -->
	<echo message="COPYING ${test.config}/${test.config.properties} TO ${pserv.test.config}/${test.config.properties}"></echo>
	<copy file="${test.config}/${test.config.properties}" tofile="${pserv.test.config}/${test.config.properties}" overwrite="true" />

	<!-- THIS IS THE LIVE DROID SIG FILE, test use of the V16 sig file -->
	<!-- Copy the config file into the server config directory -->
	<property file="${pserv.root.dir}/build.properties"/>
	<echo message="COPYING ${src.config.properties}.template TO ${src.config.properties}" />
	<copy file="${src.config}/${src.config.properties}.template" tofile="${src.config}/${src.config.properties}" overwrite="true"/>
    <replace file="${src.config}/${src.config.properties}">
      <replacefilter token="@planets.server.conf@" value="${if_server.conf}" />
    </replace>
	<property file="${src.config}/${src.config.properties}"  />
	<echo message="COPYING ${src.resources}/DROID_SignatureFile_V16.xml TO ${droid.sigfile.location}/${droid.sigfile.name}"></echo>
    <copy file="${src.resources}/DROID_SignatureFile_V16.xml" tofile="${droid.sigfile.location}/${droid.sigfile.name}" overwrite="true" />
	<echo message="COPYING ${src.config}/${src.config.properties} TO ${if_server.conf}/${src.config.properties}"></echo>
	<copy file="${src.config}/${src.config.properties}" tofile="${if_server.conf}/${src.config.properties}" overwrite="true" />
</project>
