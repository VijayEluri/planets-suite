<!--

PLANETS IF master build file
 
-->
<project default="about" basedir="." name="mainbuild">
	<!--<import file="common.xml"/>-->
	<import file="component.xml"/>
	<property name="project.fullname" value="${project.name}-${project.version}"/>
	
	<target name="javadoc" description="Build project Javadoc" unless="javadoc.generated">
		<delete dir="${javadoc.dir}"/>
		<mkdir dir="${javadoc.dir}"/>
		<var name="srcs" value=""/>
		<for param="srcdir">
			<path>
				<dirset dir="${components.dir}">
					<include name="*/src/main/java"/>
				</dirset>
			</path>
			<sequential>
				<var name="srcs" value="${srcs}@{srcdir}${path.separator}"/>
			</sequential>
		</for>
		<path id="src.dirs">
			<pathelement path="${srcs}"/>
		</path>
		<javadoc destdir="${javadoc.dir}" version="true" author="true" source="1.5" packagenames="eu.planets_project.*" breakiterator="yes" excludepackagenames="eu.planets_project.tb.*,eu.planets_project.pp.*" windowtitle="PLANETS Interoperability Framework API ${project.version} (${project.version.name}, build ${DSTAMP})" sourcepathref="src.dirs">
			<bottom><![CDATA[<b>&#169; PLANETS Consortium. (build ${DSTAMP})</b>]]></bottom>
			<classpath>
				<fileset dir="${components.dir}">
					<include name="*/lib/**/*.jar"/>
				</fileset>
				<path refid="appserver.classpath"/>
			</classpath>
			<group title="API" packages="eu.planets_project, eu.planets_project.ifr, eu.planets_project.ifr.*, eu.planets_project.ifr.**"/>
			<group title="PLANETS Interoperability Framework" packages="eu.planets_project.appserver, eu.planets_project.appserver.*"/>
		</javadoc>
		<zip basedir="${root.build.dir}" defaultexcludes="yes" destfile="${root.build.dir}/javadoc/javadoc.zip" includes="javadoc/**"/>
		<property name="javadoc.generated" value="true"/>
	</target>

	<!--<target name="compile-all" description="Compile all components">
		<iterate target="compile" exclude="${releases.exclude}"/>
	</target>-->
	<target name="build-all" depends="clean-all" description="Build all components">
		<iterate target="build"/>
		
	</target>
		<target name="clean-all" description="Clean all the mess ;)">
		<iterate target="clean"/>
		<delete dir="${root.build.dir}"/>
		<delete dir="${root.dist.dir}"/>
	</target>
	
	<target name="dist" depends="build-all" description="creates a JAR that contains all classes from all components except for GUI classes">
	    <mkdir dir="${root.dist.dir}"/>
	    <jar destfile="${root.dist.dir}/ifr-core.jar">
            <fileset dir="${root.dir}" defaultexcludes="yes">                            
                <include name="components/*/build/classes/**/*.class"/>
                <exclude name="components/*/build/classes/**/gui/**/*.class"/>
            </fileset>
        </jar>                        
	</target>
  
	<target name="about" description="help">
		<echo level="info">

Available targets:

javadoc - generates javadoc for the whole ifr project and creates a zip
build-all - builds all components
clean-all - deletes all build artefacts
about - displays this info
		</echo>
	</target>
</project>
